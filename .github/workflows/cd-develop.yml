name: CD - Deploy to QA and PRE
on:
  push:
    branches:
      - develop
jobs:
  create-prerelease:
    name: Create prerelease tag.
    runs-on: ubuntu-latest
    env:
      APP_NAME: ci_cd_1
    outputs:
      package_version: ${{ steps.set_package.outputs.package_version }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.18'
      - run: echo node -p -e "require('./package.json').version"
      - run: git config --global user.email "robotino@example.com"
      - run: git config --global user.name "MODO CI Robot"
      - run: npm install standard-version
      - run: npm run release -- --prerelease rc
      - id: print_version
        run: node -p -e "require('./package.json').version"
      - run: git push --follow-tags --no-verify
      - id: set_package
        run: |
          export CI_PACKAGE_VERSION=`node -p -e "require('./package.json').version"`
          echo "::set-output name=package_version::v$CI_PACKAGE_VERSION"
  deploy-qa:
    name: Deploy to qa
    needs: create-prerelease
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{needs.create-prerelease.outputs.package_version}}
      - run: echo ${{needs.create-prerelease.outputs.package_version}}
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.18'
      - run: git describe --tags --exact-match
  deploy-pre:
    name: Deploy to pre
    needs: create-prerelease
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{needs.create-prerelease.outputs.package_version}}
      - run: echo ${{needs.create-prerelease.outputs.package_version}}
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.18'
      - run: git describe --tags --exact-match
